name: CI Pipeline

on:
  push:
    branches:
      - Dev
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code and Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint docker

      - name: Run Python linting
        run: pylint --disable=R,C,W1203,W1202 api/ config/

      - name: Run Dockerfile linting
        uses: hadolint/hadolint-action@v3
        with:
          dockerfile: Dockerfile

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install test dependencies
        run: pip install -r requirements.txt

      - name: Run Django tests
        run: python manage.py test

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          tags: |
            hivebox:latest
            hivebox:${{ github.sha }}

  verify:
    name: Verify Deployment
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install requests
        run: pip install requests

      - name: Start Docker container
        run: docker run -d -p 8000:8000 hivebox:latest

      - name: Verify /version endpoint
        run: |
          sleep 10  # Give the container time to start
          python -c "import requests; import os; os.environ['DJANGO_SETTINGS_MODULE']='config.settings'; import django; django.setup(); from django.conf import settings; version = requests.get('http://127.0.0.1:8000/version/').text; assert settings.HIVEBOX_VERSION in version"

      - name: Run OpenSSF Scorecard
        uses: ossf/scorecard-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          publish_results: true