name: CI Pipeline # More descriptive name

on:
    push:
        branches:
            - Dev # Target the 'Dev' branch for pushes
pull_request:
    branches:
        - main # Target the 'main' branch for PRs

jobs:
    lint:
        name: Lint Code and Dockerfile    
        runs-on: ubuntu-latest
    steps:
        - name: Checkout code # Specific step name
        uses: actions/checkout@v3

        - name: Set up Python 3.9 # Specific step name
        uses: actions/setup-python@v4
        with:
            python-version: "3.9"

        - name: Install dependencies 
        run: |
        python -m pip install --upgrade pip
        pip install pylint docker

    - name: Run Python linting # Specific step name
    run: pylint --disable=R,C,W1203,W1202 api/ config/

    - name: Run Dockerfile linting # Specific step name
        uses: hadolint/hadolint-action@v3
        with:
            dockerfile: Dockerfile

test: # Another job for tests
    name: Run Unit Tests # Clear job name
    runs-on: ubuntu-latest
    needs: lint # Dependency on the 'lint' job
    steps:

        - name: Checkout code # Specific step name
        uses: actions/checkout@v3

        - name: Set up Python 3.9 # Specific step name
        uses: actions/setup-python@v4
        with:
            python-version: "3.9"

        - name: Install test dependencies # Specific step name
        run: pip install -r requirements.txt

        - name: Run Django tests # Specific step name
        run: python manage.py test

build: # Job for building the Docker image
    name: Build Docker Image # Clear job name
    runs-on: ubuntu-latest
    needs: test # Dependency on the 'test' job
    steps:

        - name: Checkout code # Specific step name
        uses: actions/checkout@v3

        - name: Set up Docker Buildx # Specific step name
        uses: docker/setup-buildx-action@v2

        - name: Build Docker image # More specific name
        uses: docker/build-push-action@v4
        with:
            context: .
            push: false # Set to 'true' to push to a registry
            tags: hivebox:latest # Tag the image

verify:
    name: Verify Deployment # Clear job name
    runs-on: ubuntu-latest
    needs: build # Dependency on the 'build' job
    steps:

        - name: Checkout code
        uses: actions/checkout@v3

        - name: Set up Python 3.9 # Specific step name
        uses: actions/setup-python@v4
        with:
            python-version: "3.9"

        - name: Install requests # Specific step name
        run: pip install requests

        - name: Verify /version endpoint # Specific step name
        run: |
        python -c "import requests; import os; os.environ['DJANGO_SETTINGS_MODULE']='config.settings'; import django; django.setup(); from django.conf import settings; version = requests.get('http://127.0.0.1:8000/version/').text; assert settings.HIVEBOX_VERSION in version"

        - name: Run OpenSSF Scorecard # Specific step name
        uses: ossf/scorecard-action@v2
        with:

            repo_token: ${{ secrets.GITHUB_TOKEN }}
            publish_results: true
